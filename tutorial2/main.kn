; 変数の宣言(:の右側は型を指定する)
var wndMain: wnd@Wnd
var btnDice: wnd@Btn

; Kuinのプログラムはmain()で始まる決まりです
func main()
	; :: は代入記号です
	; wnd@makeWnd("親ウインドウ", "サイズ変更挙動", "幅", "高さ", "タイトルテキスト")
	do @wndMain :: wnd@makeWnd(null, %normal, 800, 450, "Title")
	
	; wnd@makeBtn("親ウインドウ", "左座標", "上座標", "幅", "高さ", "ウインドウ幅変更挙動", "ウインドウ高さ変更挙動", "表示テキスト")
	do @btnDice :: wnd@makeBtn(@wndMain, 12, 12, 185, 23, %fix, %fix, "サイコロを振る")
	
	; @btnDiceのボタンが押されたときの動作を設定
	; @btnDiceOnPushはグローバル関数を示しています
	do @btnDice.onPush :: @btnDiceOnPush
	
	; wnd@act()、ウインドウの移動、サイズ変更、閉じるなどの処理を行う命令
	; while(～)は、括弧内の値が真である限り、end whileまでの処理を繰り返し実行する
	while(wnd@act())
	end while
end func

func btnDiceOnPush(sender: wnd@Btn)
	; []charは文字列を入れる型
	var msg: []char :: ""
	for(1, 10)
		; ~は文字列を連結する
		; \nは改行文字を表す
		do msg :: msg ~ lib@rnd(1, 6).toStr() ~ "\n"
	end for
	
	; wnd@msgBox(～)は画面にメッセージを表示する
	; wnd@msgBox("親ウインドウ", "表示するメッセージ", "タイトルテキスト", "表示アイコン", "表示するボタン")
	do wnd@msgBox(@wndMain, msg, "サイコロの結果", %info, %ok)
end func
